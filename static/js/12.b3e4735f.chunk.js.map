{"version":3,"sources":["Views/Collection/create.js"],"names":["CreateCollection","TextArea","Input","useState","files","setFiles","isDeploying","setIsDeploying","loading","setLoading","useSelector","state","walletAddress","creativeStudio","orbitdb","chainId","collectionInfo","colError","colArr","setColArr","router","useHistory","dispatch","useDispatch","Form","useForm","form","useEffect","useDropzone","accept","onDrop","acceptedFiles","size","message","error","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","handleClean","useCallback","a","resetFields","onFinish","values","length","uploadImage","image","console","log","warn","createERC721Collection","then","res","status","methods","getCollectionsByUser","call","collections","col","collectionData","logo","id","contractAddress","isERC1155","creator","push","process","getDB","db","set","setCollectionInfo","catch","e","handleOk","submit","className","visible","src","alt","style","width","maxWidth","height","objectFit","textAlign","colon","Item","label","name","rules","required","placeholder","autoComplete","maxLength","autoSize","minRows","margin","justify","shape","onClick"],"mappings":"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","file":"static/js/12.b3e4735f.chunk.js","sourcesContent":["import './create.scss'\r\nimport { Form, Input, message, Row, Button } from 'antd';\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport CreateColModal from 'Components/CreateColModal';\r\nimport { createERC721Collection, setCollectionInfo } from 'Store/actions';\r\nimport { uploadImage } from 'Utils/uploadStorage';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getDB } from 'Utils/orbit'\r\n\r\nexport default function CreateCollection() {\r\n\r\n    const { TextArea } = Input;\r\n\r\n    const [files, setFiles] = useState([]);\r\n    const [isDeploying, setIsDeploying] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const { walletAddress, creativeStudio, orbitdb, chainId, collectionInfo, colError } = useSelector(\r\n        (state) => state\r\n    );\r\n    const [colArr, setColArr] = useState([]); // 接收collectionInfo\r\n    const router = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [form] = Form.useForm();\r\n\r\n    useEffect(() => {\r\n        setColArr(collectionInfo)\r\n    }, [collectionInfo])\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        accept: 'image/*',\r\n        onDrop: (acceptedFiles) => {\r\n            if (acceptedFiles[0].size > 2048000) {\r\n                message.error('Logo最大为2MB!');\r\n                return;\r\n            } else {\r\n                setFiles(\r\n                    acceptedFiles.map((file) =>\r\n                        Object.assign(file, {\r\n                            preview: URL.createObjectURL(file),\r\n                        })\r\n                    )\r\n                );\r\n            }\r\n        },\r\n    });\r\n\r\n    const handleClean = useCallback(async () => {\r\n        setFiles([]);\r\n        form.resetFields();\r\n    }, [form]);\r\n\r\n    useEffect(() => {\r\n        if (colError === '1') {\r\n            handleClean();\r\n        }\r\n    }, [colError, handleClean])\r\n\r\n    const onFinish = async (values) => {\r\n        setIsDeploying(true);\r\n        let image\r\n        // console.log(attributes);\r\n        if (files.length > 0) {\r\n            // only upload max size 2 MB\r\n            if (files[0].size <= 2048000) {\r\n                // logo上传到IPFS\r\n                image = await uploadImage(files)\r\n                console.log(image);\r\n                // reset form and file\r\n            } else message.warn('Logo最大为2MB');\r\n        }\r\n        // todo 判断标准创建对应的作品集\r\n        // 创建721作品集\r\n        await dispatch(createERC721Collection(values))\r\n            .then(async (res) => {\r\n                if (!res.status) return\r\n                // 调用合约获取当前地址下的作品集\r\n                let collections = await creativeStudio.methods.getCollectionsByUser(walletAddress).call();\r\n                const col = collections[collections.length - 1]\r\n                // 组装数据\r\n                let collectionData = {\r\n                    ...values,\r\n                    logo: image || '',\r\n                    id: col.id,\r\n                    contractAddress: col.contractAddress,\r\n                    isERC1155: col.isERC1155,\r\n                    creator: col.creator,\r\n                }\r\n                colArr.push(collectionData)\r\n                // 根据环境获取orbitdb库的地址\r\n                const address = process.env.REACT_APP_ORBIT_DB;\r\n                // 获取数据库信息[address:数据库地址;orbitdb：orbitdb初始化信息]\r\n                const db = await getDB(address, orbitdb)\r\n                if (db) {\r\n                    await db.set(`${walletAddress}_${chainId}`, colArr)\r\n                    await db.set(`${col.contractAddress}_${chainId}`, collectionData)\r\n                    dispatch(setCollectionInfo(colArr))\r\n                }\r\n                router.push(`/collection/index/${walletAddress}`)\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const handleOk = async () => {\r\n        form.submit();\r\n        setLoading(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"create-collection\">\r\n                <div>\r\n                    <CreateColModal visible={isDeploying} handleOk={handleOk} setIsDeploying={setIsDeploying} loading={loading} />\r\n                    <div>\r\n                        <h2 className='create-collection-title'>创建作品集</h2>\r\n                        <div className=\"create-collection-upload-image\">\r\n                            <div className='create-collection-area-upload'>\r\n                                <div>\r\n                                    <div className='create-collection-dropzone'>\r\n                                        {/* <input {...getInputProps()} /> */}\r\n                                        {!!files[0] ? (\r\n                                            <div className='preview'>\r\n                                                <img\r\n                                                    className=\"collection-img\"\r\n                                                    src={files[0].preview}\r\n                                                    alt='priview'\r\n                                                    style={{ width: '90%', maxWidth: '208px', height: '208px', objectFit: 'contain' }}\r\n                                                />\r\n                                            </div>\r\n                                        ) : (\r\n                                            <p className='textmode' style={{ textAlign: 'center' }}>\r\n                                                {'上传LOGO'}\r\n                                            </p>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"create-collection-upload-desc\">\r\n                                <div className=\"create-collection-upLoad-title\">上传LOGO</div>\r\n                                <div>\r\n                                    <div>支持JPG, PNG, GIF</div>\r\n                                    <div>*推荐尺寸400*400，不超过2M</div>\r\n                                </div>\r\n                                <div {...getRootProps({ className: 'create-collection-dropzone' })}>\r\n                                    <input {...getInputProps()} />\r\n                                    <div className=\"create-collection-upLoad-btn\">\r\n                                        上传\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div className='create-collection-input-area'>\r\n                                <Form onFinish={onFinish} form={form} colon={false}>\r\n                                    <Form.Item\r\n                                        label={<div className='create-collection-input-name'>作品集名称</div>}\r\n                                        name='name'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: '请输入作品集名称!',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input\r\n                                            className='create-collection-input-value'\r\n                                            placeholder='请输入作品集名称'\r\n                                            size='large'\r\n                                            autoComplete='off'\r\n                                            maxLength=\"50\"\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <div className=\"mt25\"></div>\r\n                                    <Form.Item\r\n                                        label={<div className='create-collection-input-name'>作品集代码</div>}\r\n                                        name='symbol'\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: '请输入作品集代码!',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input\r\n                                            className='create-collection-input-value'\r\n                                            placeholder='请输入作品集代码'\r\n                                            size='large'\r\n                                            autoComplete='off'\r\n                                            maxLength=\"50\"\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <div className=\"mt25\"></div>\r\n                                    <Form.Item className='description' name='description' label={<div className='create-collection-input-name mr11'>简介</div>}>\r\n                                        <TextArea\r\n                                            className='create-collection-input-value'\r\n                                            autoSize={{ minRows: 2 }}\r\n                                            placeholder='请输入简介'\r\n                                            size='large'\r\n                                            maxLength=\"500\"\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item style={{ margin: '40px 0 0 165px'}}>\r\n                                        <Row justify='center'>\r\n                                            <Button\r\n                                                className='btn-create-item'\r\n                                                shape='round'\r\n                                                size='large'\r\n                                                onClick={() => handleOk()}\r\n                                            >\r\n                                                创建\r\n                                            </Button>\r\n                                        </Row>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}