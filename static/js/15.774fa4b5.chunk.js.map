{"version":3,"sources":["Views/Profile/edit.js"],"names":["EditProfile","TextArea","Input","useSelector","state","walletAddress","orbitdb","userInfo","chainId","dispatch","useDispatch","router","useHistory","useState","userData","setUserData","Form","useForm","form","formRef","useRef","useEffect","current","setFieldsValue","name","userName","description","desc","onFinish","values","a","process","getDB","db","set","setUserInfo","resetFields","push","className","colon","ref","Item","label","placeholder","size","autoComplete","maxLength","autoSize","minRows","style","marginTop","justify","htmlType","shape"],"mappings":"wTASe,SAASA,IACpB,IAAOC,EAAYC,IAAZD,SACP,EAAsDE,aAAY,SAACC,GAAD,OAAWA,KAArEC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,QAASC,EAAhC,EAAgCA,SAAUC,EAA1C,EAA0CA,QACpCC,EAAWC,cACXC,EAASC,cACf,EAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAeC,IAAKC,UAAbC,EAAP,oBACMC,EAAUC,mBAChBC,qBAAU,WAENF,EAAQG,QAAQC,eAAe,CAC3BC,KAAMjB,EAASkB,SACfC,YAAYnB,EAASoB,OAEzBZ,EAAYR,KACb,CAACA,IAEJ,IAAMqB,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,4DAEGC,iEAFH,SAIIC,YAFDD,iEAEgBzB,GAJnB,YAIP2B,EAJO,gCAMTnB,EAASW,SAAWI,EAAOL,KAC3BV,EAASa,KAAOE,EAAOH,YAPd,SAQJO,EAAGC,IAAI7B,EAAgB,WAAYS,GAR/B,OASVL,EAAS0B,aAAYrB,IACpBI,EAAKkB,cAELzB,EAAO0B,KAAP,yBAA8B7B,EAA9B,YAAyCH,IAZhC,4CAAH,sDAgBd,OACI,mCACI,sBAAKiC,UAAU,eAAf,UACI,qBAAKA,UAAU,qBAAf,kDACA,qBAAKA,UAAU,qBAAf,SACI,eAAC,IAAD,CAAMV,SAAUA,EAAUV,KAAMA,EAAMqB,OAAO,EAAOC,IAAKrB,EAAzD,UACI,cAAC,IAAKsB,KAAN,CACIC,MAAO,qBAAKJ,UAAU,0BAAf,gCACPd,KAAK,OAFT,SAII,cAAC,IAAD,CACIc,UAAU,2BACVK,YAAY,uCACZC,KAAK,QACLC,aAAa,MACbC,UAAU,SAGlB,qBAAKR,UAAU,SACf,cAAC,IAAKG,KAAN,CAAWH,UAAU,cAAcd,KAAK,cAAckB,MAAO,qBAAKJ,UAAU,0BAAf,0BAA7D,SACI,cAACrC,EAAD,CACIqC,UAAU,2BACVS,SAAU,CAAEC,QAAS,GACrBL,YAAY,iCACZC,KAAK,QACLE,UAAU,UAGlB,cAAC,IAAKL,KAAN,CAAWQ,MAAO,CAAEC,UAAW,QAA/B,SACI,cAAC,IAAD,CAAKC,QAAQ,SAAb,SACI,cAAC,IAAD,CACIb,UAAU,kBACVc,SAAS,SACTC,MAAM,QACNT,KAAK,QAJT","file":"static/js/15.774fa4b5.chunk.js","sourcesContent":["import './edit.scss'\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button, Input, Form, Row } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { getDB } from 'Utils/orbit'\r\nimport { setUserInfo } from 'Store/actions';\r\n\r\nexport default function EditProfile() {\r\n    const {TextArea} = Input\r\n    const { walletAddress, orbitdb, userInfo, chainId } = useSelector((state) => state);\r\n    const dispatch = useDispatch()\r\n    const router = useHistory()\r\n    const [userData, setUserData] = useState(null); // 存储userInfo\r\n    const [form] = Form.useForm();\r\n    const formRef = useRef()\r\n    useEffect(()=>{\r\n        // input设置默认值\r\n        formRef.current.setFieldsValue({\r\n            name: userInfo.userName,\r\n            description:userInfo.desc\r\n        })\r\n        setUserData(userInfo)\r\n    }, [userInfo])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const onFinish = async (values) => {\r\n        // 根据环境获取orbitdb库的地址\r\n        const address = process.env.REACT_APP_ORBIT_DB;\r\n        // 获取数据库信息[address:数据库地址;orbitdb：orbitdb初始化信息]\r\n        const db = await getDB(address, orbitdb)\r\n        if (db) {\r\n            userData.userName = values.name\r\n            userData.desc = values.description\r\n           await db.set(walletAddress + '_profile', userData)\r\n           dispatch(setUserInfo(userData))\r\n            form.resetFields();\r\n            // 修改完成跳转到个人中心页面\r\n            router.push(`/profile/index/${chainId}/${walletAddress}`)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"edit-profile\">\r\n                <div className=\"edit-profile-title\">编辑个人资料</div>\r\n                <div className='edit-profile-input'>\r\n                    <Form onFinish={onFinish} form={form} colon={false} ref={formRef}>\r\n                        <Form.Item\r\n                            label={<div className='edit-profile-input-name'>用户名</div>}\r\n                            name='name'\r\n                        >\r\n                            <Input\r\n                                className='edit-profile-input-value'\r\n                                placeholder='请输入用户名'\r\n                                size='large'\r\n                                autoComplete='off'\r\n                                maxLength=\"50\"\r\n                            />\r\n                        </Form.Item>\r\n                        <div className=\"mt25\"></div>\r\n                        <Form.Item className='description' name='description' label={<div className='edit-profile-input-name'>简介</div>}>\r\n                            <TextArea\r\n                                className='edit-profile-input-value'\r\n                                autoSize={{ minRows: 2 }}\r\n                                placeholder='请输入简介'\r\n                                size='large'\r\n                                maxLength=\"500\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item style={{ marginTop: '40px' }}>\r\n                            <Row justify='center'>\r\n                                <Button\r\n                                    className='btn-create-item'\r\n                                    htmlType='submit'\r\n                                    shape='round'\r\n                                    size='large'\r\n                                >\r\n                                    保存\r\n                                </Button>\r\n                            </Row>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"sourceRoot":""}