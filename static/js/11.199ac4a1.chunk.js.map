{"version":3,"sources":["Components/LoadingModal/index.js","Views/Collection/edit.js"],"names":["LoadingModal","title","visible","useState","isModalVisible","setIsModalVisible","useEffect","className","style","fontSize","fontWeight","footer","centered","width","onCancel","display","marginRight","color","EditCollection","TextArea","Input","files","setFiles","isLoading","setIsLoading","collectionDetail","setCollectionDetail","colArr","setColArr","Form","useForm","form","dispatch","useDispatch","router","useHistory","collectionAddress","useParams","useSelector","state","walletAddress","orbitdb","chainId","collectionObj","collectionInfo","formRef","useRef","useDropzone","accept","onDrop","acceptedFiles","size","message","error","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","current","setFieldsValue","description","onFinish","values","a","length","formData","FormData","append","uploadFileToIpfs","ipfsHash","logo","console","log","resetFields","warn","forEach","item","process","getDB","db","set","setCollectionInfo","goBack","src","alt","maxWidth","height","objectFit","textAlign","colon","ref","Item","label","name","symbol","autoSize","minRows","placeholder","maxLength","marginTop","justify","htmlType","shape"],"mappings":"4LAIe,SAASA,EAAT,GAA2C,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC5C,EAA4CC,oBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAEAC,qBAAU,WACRD,EAAkBH,KACjB,CAACA,IAMJ,OACE,cAAC,IAAD,CACED,MACE,mBAAGM,UAAU,iBAAiBC,MAAO,CAAEC,SAAU,OAAQC,WAAY,OAArE,qBAIFR,QAASE,EACTO,OAAQ,wBACRC,UAAQ,EACRC,MAAO,IACPC,SAfiB,WACnBT,GAAkB,IAIlB,SAYE,sBAAKG,MAAO,CAAEO,QAAS,QAAvB,UACE,qBAAKR,UAAU,SAASC,MAAO,CAAEQ,YAAa,QAA9C,SACE,cAAC,IAAD,CAAiBT,UAAU,WAAWC,MAAO,CAAEC,SAAU,YAE3D,gCACE,mBAAGF,UAAU,iBAAiBC,MAAO,CAAEC,SAAU,OAAQC,WAAY,OAArE,SACGT,IAEH,mBACEM,UAAU,iBACVC,MAAO,CACLS,MAAO,qBACPR,SAAU,WAJd,gD,wRCxBK,SAASS,IAAkB,IAAD,EAC7BC,EAAaC,IAAbD,SACR,EAA0BhB,mBAAS,IAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KACA,EAAkCnB,oBAAS,GAA3C,mBAAOoB,EAAP,KAAkBC,EAAlB,KACA,EAAgDrB,mBAAS,MAAzD,mBAAOsB,EAAP,KAAyBC,EAAzB,KACA,EAA4BvB,mBAAS,IAArC,mBAAOwB,EAAP,KAAeC,EAAf,KACA,EAAeC,IAAKC,UAAbC,EAAP,oBACMC,EAAWC,cACXC,EAASC,cACPC,EAAsBC,cAAtBD,kBACR,EAA2EE,aACvE,SAACC,GAAD,OAAWA,KADPC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,QAASC,EAAhC,EAAgCA,QAASC,EAAzC,EAAyCA,cAAeC,EAAxD,EAAwDA,eAGlDC,EAAUC,mBAChB,EAAwCC,YAAY,CAChDC,OAAQ,UACRC,OAAQ,SAACC,GACDA,EAAc,GAAGC,KAAO,OACxBC,IAAQC,MAAM,8BAGd/B,EACI4B,EAAcI,KAAI,SAACC,GAAD,OACdC,OAAOC,OAAOF,EAAM,CAChBG,QAASC,IAAIC,gBAAgBL,YAV7CM,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAkBtBxD,qBAAU,WAAO,IAAD,EACZuC,EAAQkB,QAAQC,eAAe,CAC3BC,YAAW,UAAEtB,EAAcP,UAAhB,aAAE,EAAkC6B,cAEnDvC,EAAoBiB,EAAcP,MACnC,CAACO,EAAeP,IACnB9B,qBAAU,WACNsB,EAAUgB,KACX,CAACA,IACJ,IAAMsB,EAAQ,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,yDACb3C,EAAiBwC,YAAcE,EAAOF,cAGlC5C,EAAMgD,OAAS,GAJN,sBAMLhD,EAAM,GAAG8B,MAAQ,QANZ,wBAQL3B,GAAa,IACT8C,EAAW,IAAIC,UACVC,OAAO,OAAQnD,EAAM,IAVzB,SAWkBoD,YAAiBH,GAXnC,OAWCI,EAXD,OAYLC,EAAO,qCAAuCD,EAC9ClD,GAAa,GACboD,QAAQC,IAAIF,GAGZrD,EAAS,IACTS,EAAK+C,cAlBA,wBAmBF1B,IAAQ2B,KAAK,6BAnBX,eAqBTJ,IACAlD,EAAiBkD,KAAOA,GAE5BhD,EAAOqD,SAAQ,SAAAC,GACPA,EAAK7C,oBAAsBA,IAC3B6C,EAAKN,KAAOlD,EAAiBkD,KAC7BM,EAAKhB,YAAcxC,EAAiBwC,gBAI5BiB,iEA/BH,UAiCIC,YAFDD,iEAEgBzC,GAjCnB,aAiCP2C,EAjCO,0CAmCHA,EAAGC,IAAH,UAAU7C,EAAV,YAA2BE,GAAWf,GAnCnC,yBAoCHyD,EAAGC,IAAH,UAAUjD,EAAV,YAA+BM,GAAWjB,GApCvC,QAqCTO,EAASsD,aAAkB3D,IArClB,QAuCbO,EAAOqD,SAvCM,4CAAH,sDA0Cd,OACI,mCACI,qBAAKhF,UAAU,kBAAf,SACI,gCACKgB,EAAY,cAAC,IAAD,CAActB,MAAO,eAAgBC,SAAS,IAAW,6BACtE,gCACI,oBAAIK,UAAU,wBAAd,4CACA,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,8BAAf,SACI,8BACI,gDAASsD,EAAa,CAAEtD,UAAW,8BAAnC,cACI,qCAAWuD,MACPzC,EAAM,KAAN,OAAYI,QAAZ,IAAYA,OAAZ,EAAYA,EAAkBkD,MAC9B,qBAAKpE,UAAU,UAAf,SACI,qBACIiF,KAAK,UAAAnE,EAAM,UAAN,eAAUqC,WAAV,OAAqBjC,QAArB,IAAqBA,OAArB,EAAqBA,EAAkBkD,MAC5Cc,IAAI,UACJjF,MAAO,CAAEK,MAAO,MAAO6E,SAAU,QAASC,OAAQ,QAASC,UAAW,eAI9E,mBAAGrF,UAAU,WAAWC,MAAO,CAAEqF,UAAW,UAA5C,SACK,6BAMrB,sBAAKtF,UAAU,8BAAf,UACI,qBAAKA,UAAU,+BAAf,8BACA,gCACI,4DACA,gGAEJ,gDAASsD,EAAa,CAAEtD,UAAW,8BAAnC,cACI,qCAAWuD,MACX,qBAAKvD,UAAU,6BAAf,oCAOZ,8BACI,qBAAKA,UAAU,6BAAf,SACI,eAAC,IAAD,CAAM2D,SAAUA,EAAUnC,KAAMA,EAAM+D,OAAO,EAAOC,IAAKlD,EAAzD,UACI,cAAC,IAAKmD,KAAN,CACIC,MAAO,qBAAK1F,UAAU,6BAAf,6CACP2F,KAAK,OAFT,SAII,mBAAG3F,UAAU,8BAAb,gBAA4CkB,QAA5C,IAA4CA,OAA5C,EAA4CA,EAAkByE,SAElE,qBAAK3F,UAAU,SACf,cAAC,IAAKyF,KAAN,CACIC,MAAO,qBAAK1F,UAAU,6BAAf,6CACP2F,KAAK,OAFT,SAII,mBAAG3F,UAAU,8BAAb,gBAA4CkB,QAA5C,IAA4CA,OAA5C,EAA4CA,EAAkB0E,WAElE,qBAAK5F,UAAU,SACf,cAAC,IAAKyF,KAAN,CAAWzF,UAAU,cAAc2F,KAAK,cAAcD,MAAO,qBAAK1F,UAAU,6BAAf,0BAA7D,SACI,cAACY,EAAD,CACIZ,UAAU,mDACV6F,SAAU,CAAEC,QAAS,GACrBC,YAAY,iCACZnD,KAAK,QACLoD,UAAU,UAGlB,cAAC,IAAKP,KAAN,CAAWxF,MAAO,CAAEgG,UAAW,QAA/B,SACI,cAAC,IAAD,CAAKC,QAAQ,SAAb,SACI,cAAC,IAAD,CACIlG,UAAU,kBACVmG,SAAS,SACTC,MAAM,QACNxD,KAAK,QAJT","file":"static/js/11.199ac4a1.chunk.js","sourcesContent":["import { Modal } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nexport default function LoadingModal({ title, visible }) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsModalVisible(visible);\r\n  }, [visible]);\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={\r\n        <p className='textmode mgb-0' style={{ fontSize: '28px', fontWeight: '900' }}>\r\n          Pending\r\n        </p>\r\n      }\r\n      visible={isModalVisible}\r\n      footer={<div />}\r\n      centered\r\n      width={300}\r\n      onCancel={handleCancel}\r\n    >\r\n      <div style={{ display: 'flex' }}>\r\n        <div className='center' style={{ marginRight: '15px' }}>\r\n          <LoadingOutlined className='textmode' style={{ fontSize: '31px' }} />\r\n        </div>\r\n        <div>\r\n          <p className='textmode mgb-0' style={{ fontSize: '20px', fontWeight: '900' }}>\r\n            {title}\r\n          </p>\r\n          <p\r\n            className='textmode mgb-0'\r\n            style={{\r\n              color: 'rgba(4, 4, 5, 0.5)',\r\n              fontSize: 'inherit',\r\n            }}\r\n          >\r\n            Please wait for a second\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import './edit.scss'\r\n\r\nimport { Form, Input, message, Row, Button } from 'antd';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { uploadFileToIpfs } from 'Utils/ipfs'\r\nimport LoadingModal from 'Components/LoadingModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDB } from 'Utils/orbit'\r\nimport { setCollectionInfo } from 'Store/actions';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nexport default function EditCollection() {\r\n    const { TextArea } = Input;\r\n    const [files, setFiles] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [collectionDetail, setCollectionDetail] = useState(null);\r\n    const [colArr, setColArr] = useState([]);\r\n    const [form] = Form.useForm();\r\n    const dispatch = useDispatch()\r\n    const router = useHistory()\r\n    const { collectionAddress } = useParams()\r\n    const { walletAddress, orbitdb, chainId, collectionObj, collectionInfo } = useSelector(\r\n        (state) => state\r\n    );\r\n    const formRef = useRef()\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        accept: 'image/*',\r\n        onDrop: (acceptedFiles) => {\r\n            if (acceptedFiles[0].size > 2048000) {\r\n                message.error('Logo最大为2MB!');\r\n                return;\r\n            } else {\r\n                setFiles(\r\n                    acceptedFiles.map((file) =>\r\n                        Object.assign(file, {\r\n                            preview: URL.createObjectURL(file),\r\n                        })\r\n                    )\r\n                );\r\n            }\r\n        },\r\n    });\r\n    // todo取出当前作品集信息\r\n    useEffect(() => {\r\n        formRef.current.setFieldsValue({\r\n            description: collectionObj[collectionAddress]?.description\r\n        })\r\n        setCollectionDetail(collectionObj[collectionAddress])\r\n    }, [collectionObj, collectionAddress])\r\n    useEffect(() => {\r\n        setColArr(collectionInfo)\r\n    }, [collectionInfo])\r\n    const onFinish = async (values) => {\r\n        collectionDetail.description = values.description;\r\n        let logo\r\n        // console.log(attributes);\r\n        if (files.length > 0) {\r\n            // only upload max size 2 MB\r\n            if (files[0].size <= 2048000) {\r\n                // upload image\r\n                setIsLoading(true);\r\n                let formData = new FormData();\r\n                formData.append('file', files[0]);\r\n                const ipfsHash = await uploadFileToIpfs(formData);\r\n                logo = 'https://gateway.pinata.cloud/ipfs/' + ipfsHash;\r\n                setIsLoading(false);\r\n                console.log(logo);\r\n\r\n                // reset form and file\r\n                setFiles([]);\r\n                form.resetFields();\r\n            } else message.warn('Logo最大为2MB');\r\n        };\r\n        if (logo) {\r\n            collectionDetail.logo = logo\r\n        }\r\n        colArr.forEach(item => {\r\n            if (item.collectionAddress === collectionAddress) {\r\n                item.logo = collectionDetail.logo\r\n                item.description = collectionDetail.description\r\n            }\r\n        })\r\n        // // 根据环境获取orbitdb库的地址\r\n        const address = process.env.REACT_APP_ORBIT_DB;\r\n        // 获取数据库信息[address:数据库地址;orbitdb：orbitdb初始化信息]\r\n        const db = await getDB(address, orbitdb)\r\n        if (db) {\r\n            await db.set(`${walletAddress}_${chainId}`, colArr)\r\n            await db.set(`${collectionAddress}_${chainId}`, collectionDetail)\r\n            dispatch(setCollectionInfo(colArr))\r\n        }\r\n        router.goBack()\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"edit-collection\">\r\n                <div>\r\n                    {isLoading ? <LoadingModal title={'Upload Image'} visible={true} /> : <></>}\r\n                    <div>\r\n                        <h2 className='edit-collection-title'>编辑作品集</h2>\r\n                        <div className=\"edit-collection-upload-image\">\r\n                            <div className='edit-collection-area-upload'>\r\n                                <div>\r\n                                    <div {...getRootProps({ className: 'edit-collection-dropzone' })}>\r\n                                        <input {...getInputProps()} />\r\n                                        {!!(files[0] || collectionDetail?.logo) ? (\r\n                                            <div className='preview'>\r\n                                                <img\r\n                                                    src={files[0]?.preview || collectionDetail?.logo}\r\n                                                    alt='priview'\r\n                                                    style={{ width: '90%', maxWidth: '208px', height: '208px', objectFit: 'contain' }}\r\n                                                />\r\n                                            </div>\r\n                                        ) : (\r\n                                            <p className='textmode' style={{ textAlign: 'center' }}>\r\n                                                {'上传LOGO'}\r\n                                            </p>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"edit-collection-upload-desc\">\r\n                                <div className=\"edit-collection-upLoad-title\">修改LOGO</div>\r\n                                <div>\r\n                                    <div>支持JPG, PNG, GIF</div>\r\n                                    <div>*推荐尺寸400*400，不超过2M</div>\r\n                                </div>\r\n                                <div {...getRootProps({ className: 'edit-collection-dropzone' })}>\r\n                                    <input {...getInputProps()} />\r\n                                    <div className=\"edit-collection-upLoad-btn\">\r\n                                        修改\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div className='edit-collection-input-area'>\r\n                                <Form onFinish={onFinish} form={form} colon={false} ref={formRef}>\r\n                                    <Form.Item\r\n                                        label={<div className='edit-collection-input-name'>作品集名称*</div>}\r\n                                        name='name'\r\n                                    >\r\n                                        <p className=\"edit-collection-input-value\">{collectionDetail?.name}</p>\r\n                                    </Form.Item>\r\n                                    <div className=\"mt25\"></div>\r\n                                    <Form.Item\r\n                                        label={<div className='edit-collection-input-name'>作品集代码*</div>}\r\n                                        name='name'\r\n                                    >\r\n                                        <p className=\"edit-collection-input-value\">{collectionDetail?.symbol}</p>\r\n                                    </Form.Item>\r\n                                    <div className=\"mt25\"></div>\r\n                                    <Form.Item className='description' name='description' label={<div className='edit-collection-input-name'>简介</div>}>\r\n                                        <TextArea\r\n                                            className='input-name-nft input-mode-bc content-description'\r\n                                            autoSize={{ minRows: 2 }}\r\n                                            placeholder='请输入简介'\r\n                                            size='large'\r\n                                            maxLength=\"500\"\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item style={{ marginTop: '40px' }}>\r\n                                        <Row justify='center'>\r\n                                            <Button\r\n                                                className='btn-create-item'\r\n                                                htmlType='submit'\r\n                                                shape='round'\r\n                                                size='large'\r\n                                            >\r\n                                                保存\r\n                                            </Button>\r\n                                        </Row>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}